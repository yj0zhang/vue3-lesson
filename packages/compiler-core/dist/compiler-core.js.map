{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["\n\n//\u7F16\u8BD1\u5206\u4E3A\u4E09\u6B65\n// 1. \u5C06\u6A21\u7248\u8F6C\u5316\u6210ast\u8BED\u6CD5\u6811\uFF08\u6E90\u7801\u4E2D\u4F7F\u7528\u4E86\u7B2C\u4E09\u65B9\u6A21\u5757\uFF09\n// 2. \u8F6C\u5316\u751F\u6210codegennode\n// 3. \u8F6C\u5316\u6210render\u51FD\u6570\n\nimport { NodeTypes } from \"./ast\";\n\n\nfunction createParserContext(content) {\n    return {\n        originalSource: content,\n        source: content,//\u5B57\u7B26\u4E32\u4F1A\u4E0D\u505C\u7684\u51CF\u5C11\n        line:1,\n        column:1,\n        offset:0,\n    }\n}\n\nfunction isEnd(context) {\n    return !context.source\n}\n\n//\u622A\u53D6\nfunction advanceBy(context, endIndex) {\n    let c = context.source;\n    context.source = c.slice(endIndex);\n}\n\nfunction parseTextData(context, endIndex) {\n    const content = context.source.slice(0,endIndex);\n    advanceBy(context, endIndex);\n    return content;\n}\n\nfunction parseText(context) {\n    let tokens = ['<','{{'];//\u627E\u5F53\u524D\u79BB\u7740\u6700\u8FD1\u7684\u8BCD\u6CD5\n    let endIndex = context.source.length;\n    for(let i = 0; i < tokens.length;i++) {\n        const index = context.source.indexOf(tokens[i],1);\n        if(index!==-1&&endIndex>index){\n            endIndex=index;\n        }\n    }\n    //0-endIndex\u4E3A\u6587\u5B57\u5185\u5BB9\n    let content = parseTextData(context,endIndex);\n    return {\n        type: NodeTypes.TEXT,\n        content\n    }\n}\n\nfunction advanceSpaces(context) {\n    const match = /^[\\t\\r\\n]+/.exec(context.source);\n    if(match) {\n        advanceBy(context,match[0].length)\n    }\n}\n\nfunction getCursor(context) {\n    //\n}\nfunction getSelection(context, index) {\n    //\n}\nfunction parseTag(context) {\n    const start = getCursor(context);\n    const match = /^<\\/?([a-z][^ \\t\\r\\n/>]*)/.exec(context.source)\n    const tag = match[0];\n    advanceBy(context, match[0].length);\n    const isSelfClosing = context.source.startsWith('/>');\n    advanceSpaces(context);\n    advanceBy(context, isSelfClosing ? 2:1);\n    return  {\n        type: NodeTypes.ELEMENT,\n        tag,\n        isSelfClosing,\n        loc: getSelection(context,start),\n    }\n}\n\nfunction parseElement(context) {\n    const ele = parseTag(context);\n    if(context.source.startsWith('</')) {\n        parseTag(context)//\u95ED\u5408\u6807\u7B7E\uFF0C\u76F4\u63A5\u79FB\u9664\n    }\n    (ele as any).children = [];\n    (ele as any).loc = getSelection(context,ele.loc.satrt)\n    return ele;\n}\n\nfunction parseChildren(context) {\n    let nodes = []\n    while(!isEnd(context)) {\n        let node;\n        const c = context.source;\n        if(c.startsWith('{{')) {\n            node=\"\u8868\u8FBE\u5F0F\"\n        } else if(c[0] === '<'){\n            node = parseElement(context)\n        } else {\n            //\u6587\u672C\n            node = parseText(context);\n        }\n        //\u72B6\u6001\u673A\n        nodes.push(node);\n    }\n    return nodes;\n}\n\nfunction createRoot(children) {\n    return {\n        type: NodeTypes.ROOT,\n        children,\n    }\n}\n// \u5C06\u6A21\u7248\u8F6C\u5316\u6210ast\u8BED\u6CD5\u6811\nfunction parse(template) {\n    //\u6839\u636Etemplate\u4EA7\u751F\u4E00\u68F5\u6811;\n    const context = createParserContext(template);\n    return createRoot(parseChildren(context))\n}\n\nexport {parse}"],
  "mappings": ";AAUA,SAAS,oBAAoB,SAAS;AAClC,SAAO;AAAA,IACH,gBAAgB;AAAA,IAChB,QAAQ;AAAA;AAAA,IACR,MAAK;AAAA,IACL,QAAO;AAAA,IACP,QAAO;AAAA,EACX;AACJ;AAEA,SAAS,MAAM,SAAS;AACpB,SAAO,CAAC,QAAQ;AACpB;AAGA,SAAS,UAAU,SAAS,UAAU;AAClC,MAAI,IAAI,QAAQ;AAChB,UAAQ,SAAS,EAAE,MAAM,QAAQ;AACrC;AAEA,SAAS,cAAc,SAAS,UAAU;AACtC,QAAM,UAAU,QAAQ,OAAO,MAAM,GAAE,QAAQ;AAC/C,YAAU,SAAS,QAAQ;AAC3B,SAAO;AACX;AAEA,SAAS,UAAU,SAAS;AACxB,MAAI,SAAS,CAAC,KAAI,IAAI;AACtB,MAAI,WAAW,QAAQ,OAAO;AAC9B,WAAQ,IAAI,GAAG,IAAI,OAAO,QAAO,KAAK;AAClC,UAAM,QAAQ,QAAQ,OAAO,QAAQ,OAAO,CAAC,GAAE,CAAC;AAChD,QAAG,UAAQ,MAAI,WAAS,OAAM;AAC1B,iBAAS;AAAA,IACb;AAAA,EACJ;AAEA,MAAI,UAAU,cAAc,SAAQ,QAAQ;AAC5C,SAAO;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AACJ;AAEA,SAAS,cAAc,SAAS;AAC5B,QAAM,QAAQ,aAAa,KAAK,QAAQ,MAAM;AAC9C,MAAG,OAAO;AACN,cAAU,SAAQ,MAAM,CAAC,EAAE,MAAM;AAAA,EACrC;AACJ;AAEA,SAAS,UAAU,SAAS;AAE5B;AACA,SAAS,aAAa,SAAS,OAAO;AAEtC;AACA,SAAS,SAAS,SAAS;AACvB,QAAM,QAAQ,UAAU,OAAO;AAC/B,QAAM,QAAQ,4BAA4B,KAAK,QAAQ,MAAM;AAC7D,QAAM,MAAM,MAAM,CAAC;AACnB,YAAU,SAAS,MAAM,CAAC,EAAE,MAAM;AAClC,QAAM,gBAAgB,QAAQ,OAAO,WAAW,IAAI;AACpD,gBAAc,OAAO;AACrB,YAAU,SAAS,gBAAgB,IAAE,CAAC;AACtC,SAAQ;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK,aAAa,SAAQ,KAAK;AAAA,EACnC;AACJ;AAEA,SAAS,aAAa,SAAS;AAC3B,QAAM,MAAM,SAAS,OAAO;AAC5B,MAAG,QAAQ,OAAO,WAAW,IAAI,GAAG;AAChC,aAAS,OAAO;AAAA,EACpB;AACA,EAAC,IAAY,WAAW,CAAC;AACzB,EAAC,IAAY,MAAM,aAAa,SAAQ,IAAI,IAAI,KAAK;AACrD,SAAO;AACX;AAEA,SAAS,cAAc,SAAS;AAC5B,MAAI,QAAQ,CAAC;AACb,SAAM,CAAC,MAAM,OAAO,GAAG;AACnB,QAAI;AACJ,UAAM,IAAI,QAAQ;AAClB,QAAG,EAAE,WAAW,IAAI,GAAG;AACnB,aAAK;AAAA,IACT,WAAU,EAAE,CAAC,MAAM,KAAI;AACnB,aAAO,aAAa,OAAO;AAAA,IAC/B,OAAO;AAEH,aAAO,UAAU,OAAO;AAAA,IAC5B;AAEA,UAAM,KAAK,IAAI;AAAA,EACnB;AACA,SAAO;AACX;AAEA,SAAS,WAAW,UAAU;AAC1B,SAAO;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AACJ;AAEA,SAAS,MAAM,UAAU;AAErB,QAAM,UAAU,oBAAoB,QAAQ;AAC5C,SAAO,WAAW,cAAc,OAAO,CAAC;AAC5C;",
  "names": []
}
